#
#  Config file for the Cyclone i960ca CVME961 BSP
#
#  $Id: cvme961.cfg,v 1.2 2001-09-27 12:02:52 chris Exp $
#

include $(RTEMS_ROOT)/make/custom/default.cfg

RTEMS_CPU=i960
RTEMS_CPU_MODEL=i960ca

# This is the actual bsp directory used during the build process.
RTEMS_BSP_FAMILY=cvme961

#  This contains the compiler options necessary to select the CPU model
#  and (hopefully) optimize for it. 
#
CPU_CFLAGS=-mca

# -pipe does not work in our local configuration of FSF GCC 2.6.0
# configured on top of Intel Release 2.4.  We did this to replace
# the GCC 2.4.5 shipped with Intel Release 2.4.

# optimize flag: typically -0, could use -O4 or -fast
# -O4 is ok for RTEMS
CFLAGS_OPTIMIZE_V=-O4 -mleaf-procedures

#  This section makes the target dependent options file.

#  NDEBUG (C library)
#     if defined asserts do not generate code.  This is commonly used
#     as a command line option.
#
#  RTEMS_TEST_NO_PAUSE (RTEMS tests)
#     do not pause between screens of output in the rtems tests
#
#  NO_TABLE_MOVE (SPARC PORT)
#     do not have a second trap table -- use the BSP's
#
#  RTEMS_DEBUG (RTEMS)
#     If defined, debug checks in RTEMS and support library code are enabled.

define make-target-options
	@echo "/* #define NDEBUG 1 */ "                     >>$@
	@echo "#define RTEMS_TEST_NO_PAUSE 1"               >>$@
	@echo "/* #define RTEMS_DEBUG  1 */"                >>$@
endef

# The following are definitions of make-exe which will work using ld as
# is currently required.  It is expected that as of gcc 2.8, the end user
# will be able to override parts of the compilers specs and link using gcc.

ifeq ($(RTEMS_USE_GCC272),yes)

define make-exe
	$(LD) -u _sbrk $(LDFLAGS) -N -T $(LINKCMDS) -o $(basename $@).exe \
	     $(START_FILE) $(LINK_OBJS) --start-group $(LINK_LIBS) --end-group
	$(NM) -g -n $(basename $@).exe > $(basename $@).num
	$(SIZE) $(basename $@).exe
endef

else
define make-exe
	$(LINK.c) $(AM_CFLAGS) $(AM_LDFLAGS) \
	    $(LDLIBS) -o $@ \
	    $(LINK_OBJS) $(LINK_LIBS)
	$(NM) -g -n $@ > $(basename $@).num
	$(SIZE) $@
endef
endif

# Miscellaneous additions go here

